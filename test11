DELIMITER $$

DROP PROCEDURE IF EXISTS find_phone_numbers_in_db$$

CREATE PROCEDURE find_phone_numbers_in_db()
BEGIN
    
    DECLARE done INT DEFAULT 0;
    DECLARE tbl VARCHAR(255);
    DECLARE col VARCHAR(255);
    

    DECLARE v_actual_tables INT DEFAULT 0;
    DECLARE v_total_columns INT DEFAULT 0;
    DECLARE v_tables_with_match INT DEFAULT 0;
    DECLARE v_failed_checks INT DEFAULT 0;
    
    
    DECLARE result TEXT DEFAULT 'table_name,column_name,phone_number';
    DECLARE tables_with_matches TEXT DEFAULT '';
    
    DECLARE cur CURSOR FOR
        SELECT TABLE_NAME, COLUMN_NAME
        FROM INFORMATION_SCHEMA.COLUMNS
        WHERE TABLE_SCHEMA = DATABASE()
          AND DATA_TYPE IN ('char', 'varchar', 'text', 'longtext');

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;

    
    SELECT COUNT(DISTINCT TABLE_NAME) INTO v_actual_tables
    FROM INFORMATION_SCHEMA.COLUMNS
    WHERE TABLE_SCHEMA = DATABASE();

    OPEN cur;

    read_loop: LOOP
        FETCH cur INTO tbl, col;
        IF done THEN LEAVE read_loop; END IF;
        
        SET v_total_columns = v_total_columns + 1;

        BEGIN
            DECLARE CONTINUE HANDLER FOR SQLEXCEPTION 
            BEGIN
                SET v_failed_checks = v_failed_checks + 1;
            END;

            
            SET @sql = CONCAT(
                "SELECT GROUP_CONCAT(CONCAT('\"", tbl, "\",\"", col, "\",\"', ",
                "REGEXP_SUBSTR(`", col, "`, '(^|[^0-9])(\\\\+91\\\\-?|91|0)?[6-9][0-9]{9}'), '\"') ",
                "SEPARATOR '\n') INTO @match_result ",
                "FROM `", tbl, "` ",
                "WHERE `", col, "` REGEXP '(^|[^0-9])(\\\\+91\\\\-?|91|0)?[6-9][0-9]{9}' ",
                "LIMIT 5"
            );

            SET @match_result = NULL;
            PREPARE stmt FROM @sql;
            EXECUTE stmt;
            DEALLOCATE PREPARE stmt;

            IF @match_result IS NOT NULL AND @match_result != '' THEN
                SET result = CONCAT(result, '\n', @match_result);

                -- Track unique tables with matches
                IF LOCATE(CONCAT(',', tbl, ','), CONCAT(',', tables_with_matches, ',')) = 0 THEN
                    SET v_tables_with_match = v_tables_with_match + 1;
                    SET tables_with_matches = CONCAT(tables_with_matches, ',', tbl);
                END IF;
            END IF;
        END;
    END LOOP;

    CLOSE cur;

   
    SELECT REPLACE(result, '\n', '\r\n') AS CSV_Output;

    
    SELECT '========================================' AS SummaryLine
    UNION ALL
    SELECT CONCAT('Actual Tables in Database: ', v_actual_tables) AS SummaryLine
    UNION ALL
    SELECT CONCAT('Columns Scanned: ', v_total_columns) AS SummaryLine
    UNION ALL
    SELECT CONCAT('Tables with Phone Numbers: ', v_tables_with_match) AS SummaryLine
    UNION ALL
    SELECT CONCAT('Failed Column Scans: ', v_failed_checks) AS SummaryLine
    UNION ALL
    SELECT '========================================' AS SummaryLine;

END$$

DELIMITER ;
